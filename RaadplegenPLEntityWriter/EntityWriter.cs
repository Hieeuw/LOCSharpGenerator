using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.IO;
using System.Linq;
using QRecord;

namespace RaadplegenPLEntityWriter
{
    public class EntityWriter
    {
        public string Path { get; }

        public IEnumerable<TAB_DESCRIPTION> Collection { get; private set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="EntityWriter"/> class. 
        /// Initializes a new instance of the<see cref="EntityWriter"/>class.
        /// </summary>
        /// <param name="rows">
        /// </param>
        /// <param name="path">
        /// </param>
        [SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1614:ElementParameterDocumentationMustHaveText", Justification = "Reviewed. Suppression is OK here.")]
        public EntityWriter(IEnumerable<TAB_DESCRIPTION> rows, string path = @"C:\temp")
        {
            this.Collection = rows;
            this.Path = path;
        }

        private static string Using => "using System.Diagnostics.CodeAnalysis;\r\nusing Centric.PIV.Burgerzaken.RaadplegenPL.ResourceLayer.Brp.Interfaces;\r\n";

        private static string Header =>
            $"//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//    This code was generated by a tool.\r\n//\r\n//    Manual changes to this file may cause unexpected behavior in your application.\r\n//    Manual changes to this file will be overwritten if the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n\r\n{Using}\r\n\r\nnamespace Centric.PIV.Burgerzaken.RaadplegenPL.ResourceLayer.Brp.DataModel.DataEntities\r\n";

        public string Export()
        {
            var script = $"{Header}{{\r\n\t/// <summary>\r\n\t/// {Collection.First().TABLE_NAME}:{Collection.First().TAB_COMMENTS}\r\n\t/// </summary>\r\n\tpublic partial class {Collection.First().TABLE_NAME} : IRecord";
            var properties = string.Empty;
            foreach (var v in this.Collection)
            {
                properties += $"\t\t/// <summary>\r\n\t\t/// Gets or sets {v.COL_COMMENTS}\r\n\t\t/// </summary>\r\n";
                properties += $"\t\t[ExcludeFromCodeCoverage]\r\n";
                properties += $"\t\tpublic {v.Type}{(v.IsNullable ? "?" : string.Empty)} {v.COLUMN_NAME} {{ get; set; }}\r\n\r\n";
            }

            return $"{script}\r\n\t{{\r\n{properties.Remove(properties.LastIndexOf("\r\n", StringComparison.Ordinal), 2)}\t}}\r\n}}";
        }

        [SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1502:ElementMustNotBeOnSingleLine", Justification = "Reviewed. Suppression is OK here.")]
        public void AsFile() =>
            File.WriteAllLines(
                $"{System.IO.Path.Combine(this.Path, this.Collection.First().TABLE_NAME)}.cs",
                new[] { this.Export() });
    }
}
