//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template: Logisch Ontwerp BRP 4.2.0 1 januari 2023
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using Centric.PIV.Burgerzaken.RaadplegenPL.Common.Models;
using Centric.PIV.Burgerzaken.RaadplegenPL.ResourceLayer.Brp.DomainModel.LogischOntwerp.LandelijkeTabellen;
using Newtonsoft.Json;

namespace Centric.PIV.Burgerzaken.RaadplegenPL.ResourceLayer.Brp.DomainModel.LogischOntwerp
{
	/// <summary>
	/// Representeert Element0110 (A-nummer)
	/// Het administratienummer, bedoeld in artikel 4.9 van de Wet BRP.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0110 : Element<Int64>
	{
		public Element0110(Int64 val)
		{
			this.element = new ElementNummer("0110", "A-nummer"/*,len: 10*/);
			this.waarde = new ElementWaarde<Int64> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element0120 (Burgerservicenummer)
	/// Het burgerservicenummer, bedoeld in artikel 1.1 van de Wet algemene bepalingen burgerservicenummer.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0120 : Element<Int32>
	{
		public Element0120(Int32 val)
		{
			this.element = new ElementNummer("0120", "Burgerservicenummer"/*,len: 9*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element0210 (Voornamen)
	/// De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. Indien aanwezig, wordt het predicaat (tabel 38) afgesplitst.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0210 : Element<String>
	{
		public Element0210(String val)
		{
			this.element = new ElementNummer("0210", "Voornamen"/*,len: 200*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element0220 (Adellijke titel/predicaat)
	/// Een code, voorkomend in Tabel 38, Tabel Adellijke titel/predicaat, die aangeeft welke titel of welk predicaat behoort tot de naam (bij adellijke titel geslachtsnaam, bij predicaat voornaam).
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0220 : Element<String>
	{
		public Element0220(String val)
		{
			this.element = new ElementNummer("0220", "Adellijke titel/predicaat"/*,len: 2*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Tabel38.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0230 (Voorvoegsel geslachtsnaam)
	/// Dat deel van de geslachtsnaam dat voorkomt in Tabel 36, Voorvoegseltabel en, gescheiden door een spatie, voorafgaat aan de rest van de geslachtsnaam.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0230 : Element<String>
	{
		public Element0230(String val)
		{
			this.element = new ElementNummer("0230", "Voorvoegsel geslachtsnaam"/*,len: 10*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Tabel36.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0240 (Geslachtsnaam)
	/// De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels (tabel 36) en adellijke titel/predicaat (tabel 38) zijn afgesplitst.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0240 : Element<String>
	{
		public Element0240(String val)
		{
			this.element = new ElementNummer("0240", "Geslachtsnaam"/*,len: 200*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element0310 (Geboortedatum)
	/// De datum waarop de persoon is geboren.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0310 : Element<Int32>
	{
		public Element0310(Int32 val)
		{
			this.element = new ElementNummer("0310", "Geboortedatum"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element0320 (Geboorteplaats)
	/// Een code, opgenomen in Tabel 33, Gemeententabel of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar de persoon is geboren.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0320 : Element<String>
	{
		public Element0320(String val)
		{
			this.element = new ElementNummer("0320", "Geboorteplaats"/*,len: 40*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Tabel33.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0330 (Geboorteland)
	/// Een code, opgenomen in Tabel 34, Landentabel, die het land aangeeft waar de persoon is geboren.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0330 : Element<Int16>
	{
		public Element0330(Int16 val)
		{
			this.element = new ElementNummer("0330", "Geboorteland"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel34.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0410 (Geslachtsaanduiding)
	/// Een aanduiding die aangeeft dat de ingeschrevene een man of een vrouw is, of dat het geslacht (nog) onbekend is.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0410 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "M", "Man" }, { "V", "Vrouw" }, { "O", "Onbekend" } };

		public Element0410(String val)
		{
			this.element = new ElementNummer("0410", "Geslachtsaanduiding"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element0510 (Nationaliteit)
	/// Een code, opgenomen in Tabel 32, Nationaliteitentabel, die aangeeft welke nationaliteit de ingeschrevene bezit.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0510 : Element<Int16>
	{
		public Element0510(Int16 val)
		{
			this.element = new ElementNummer("0510", "Nationaliteit"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel32.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0610 (Datum huwelijkssluiting/aangaan geregistreerd partnerschap)
	/// De datum waarop het huwelijk is voltrokken of het partnerschap is aangegaan.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0610 : Element<Int32>
	{
		public Element0610(Int32 val)
		{
			this.element = new ElementNummer("0610", "Datum huwelijkssluiting/aangaan geregistreerd partnerschap"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element0620 (Plaats huwelijkssluiting/aangaan geregistreerd partnerschap)
	/// Een code, opgenomen in Tabel 33, Gemeententabel of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar het huwelijk is voltrokken of het partnerschap is aangegaan.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0620 : Element<String>
	{
		public Element0620(String val)
		{
			this.element = new ElementNummer("0620", "Plaats huwelijkssluiting/aangaan geregistreerd partnerschap"/*,len: 40*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Tabel33.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0630 (Land huwelijkssluiting/aangaan geregistreerd partnerschap)
	/// Een code, opgenomen in Tabel 34, Landentabel, die het land aangeeft waar het huwelijk is voltrokken of het partnerschap is aangegaan.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0630 : Element<Int16>
	{
		public Element0630(Int16 val)
		{
			this.element = new ElementNummer("0630", "Land huwelijkssluiting/aangaan geregistreerd partnerschap"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel34.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0710 (Datum ontbinding huwelijk/geregistreerd partnerschap)
	/// De datum waarop het huwelijk/geregistreerd partnerschap is ontbonden of nietig verklaard.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0710 : Element<Int32>
	{
		public Element0710(Int32 val)
		{
			this.element = new ElementNummer("0710", "Datum ontbinding huwelijk/geregistreerd partnerschap"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element0720 (Plaats ontbinding huwelijk/geregistreerd partnerschap)
	/// Een code, opgenomen in Tabel 33, Gemeententabel of een buitenlandse plaats of een plaatsbepaling die aangeeft waar het huwelijk/ geregistreerd partnerschap is ontbonden of nietig verklaard.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0720 : Element<String>
	{
		public Element0720(String val)
		{
			this.element = new ElementNummer("0720", "Plaats ontbinding huwelijk/geregistreerd partnerschap"/*,len: 40*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Tabel33.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0730 (Land ontbinding huwelijk/geregistreerd partnerschap)
	/// Een code, opgenomen in Tabel 34, Landentabel, die het land aangeeft waar het huwelijk/geregistreerd partnerschap is ontbonden of nietig verklaard.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0730 : Element<Int16>
	{
		public Element0730(Int16 val)
		{
			this.element = new ElementNummer("0730", "Land ontbinding huwelijk/geregistreerd partnerschap"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel34.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0740 (Reden ontbinding huwelijk/geregistreerd partnerschap)
	/// Een code, opgenomen in Tabel 41, Tabel Reden ontbinding/ nietigverklaring huwelijk/geregistreerd partnerschap, die aangeeft om welke reden het huwelijk/geregistreerd partnerschap is ontbonden of nietig verklaard.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0740 : Element<String>
	{
		public Element0740(String val)
		{
			this.element = new ElementNummer("0740", "Reden ontbinding huwelijk/geregistreerd partnerschap"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Tabel41.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0810 (Datum overlijden)
	/// De datum van overlijden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0810 : Element<Int32>
	{
		public Element0810(Int32 val)
		{
			this.element = new ElementNummer("0810", "Datum overlijden"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element0820 (Plaats overlijden)
	/// Een code, opgenomen in Tabel 33, Gemeententabel of een buitenlandse plaats of een plaatsbepaling, die aangeeft waar het overlijden heeft plaatsgevonden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0820 : Element<String>
	{
		public Element0820(String val)
		{
			this.element = new ElementNummer("0820", "Plaats overlijden"/*,len: 40*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Tabel33.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0830 (Land overlijden)
	/// Een code, opgenomen in Tabel 34, Landentabel, die het land aangeeft waar de persoon is overleden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0830 : Element<Int16>
	{
		public Element0830(Int16 val)
		{
			this.element = new ElementNummer("0830", "Land overlijden"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel34.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0910 (Gemeente van inschrijving)
	/// Een code, opgenomen in Tabel 33, Gemeententabel, die aangeeft in welke gemeente de PL zich bevindt of de gemeente waarnaar de PL is uitgeschreven of de gemeente waar de PL voor de eerste keer is opgenomen. In categorie 16 betreft het de gemeente waar zich het tijdelijk verblijfsadres bevindt.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0910 : Element<Int16>
	{
		public Element0910(Int16 val)
		{
			this.element = new ElementNummer("0910", "Gemeente van inschrijving"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel33.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element0920 (Datum inschrijving)
	/// Bij een tijdige aangifte (tussen vier weken voor en vijf dagen na de verhuizing) van vestiging in de gemeente is dit de in de aangifte vermelde datum van adreswijziging. Bij een niet tijdige aangifte is dit de aangiftedatum. Bij inschrijving op grond van een geboorteakte is dit de geboortedatum. Bij ambtshalve inschrijving is dit de datum waarop de betrokkene schriftelijk van het voornemen van ambtshalve opneming mededeling is gedaan. In categorie 16 betreft het de datum waarop betrokkene voor het eerst op het tijdelijk verblijfsadres in deze gemeente is gaan wonen, mits deze adressen in de tijd aaneengesloten zijn.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element0920 : Element<Int32>
	{
		public Element0920(Int32 val)
		{
			this.element = new ElementNummer("0920", "Datum inschrijving"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element1010 (Functie adres)
	/// De aanduiding die aangeeft of het adres de functie heeft van woonadres of briefadres.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1010 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "B", "briefadres" }, { "W", "woonadres" } };

		public Element1010(String val)
		{
			this.element = new ElementNummer("1010", "Functie adres"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element1020 (Gemeentedeel)
	/// Een geografisch bepaald gebied dat een deel is van het gemeentelijk grondgebied.  Dit element wordt gebruikt als nadere plaatsbepaling van een straat of locatie, indien deze binnen de gemeente niet uniek is.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1020 : Element<String>
	{
		public Element1020(String val)
		{
			this.element = new ElementNummer("1020", "Gemeentedeel"/*,len: 24*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1030 (Datum aanvang adreshouding)
	/// De datum van aangifte of ambtshalve melding van verblijf en adres. Bij een tijdige aangifte (tussen vier weken voor en vijf dagen na de verhuizing) van vestiging op het adres is dit de in de aangifte vermelde datum van adreswijziging. Bij een niet tijdige aangifte is dit de aangiftedatum. Bij inschrijving op grond van een geboorteakte is dit de geboortedatum. Bij ambtshalve inschrijving is dit de datum waarop de betrokkene schriftelijk van het voornemen van ambtshalve opneming mededeling is gedaan.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1030 : Element<Int32>
	{
		public Element1030(Int32 val)
		{
			this.element = new ElementNummer("1030", "Datum aanvang adreshouding"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element1110 (Straatnaam)
	/// De officiële straatnaam zoals door het gemeentebestuur is vastgesteld dan wel een kopie van de inhoud van element 11.15 Naam openbare ruimte. Indien noodzakelijk wordt de straatnaam afgekort conform de specificaties van de NEN-5825 [2002] norm.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1110 : Element<String>
	{
		public Element1110(String val)
		{
			this.element = new ElementNummer("1110", "Straatnaam"/*,len: 24*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1115 (Naam Openbare ruimte)
	/// Een naam die aan een openbare ruimte is toegekend in een daartoe strekkend formeel gemeentelijk besluit. Een openbare ruimte is een door het bevoegde gemeentelijke orgaan als zodanig aangewezen benaming van een binnen één woonplaats gelegen buitenruimte. Voor ‘Naam openbare ruimte’ mag ‘officiële straatnaam’ gelezen worden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1115 : Element<String>
	{
		public Element1115(String val)
		{
			this.element = new ElementNummer("1115", "Naam Openbare ruimte"/*,len: 80*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1120 (Huisnummer)
	/// De numerieke aanduiding zoals deze door het gemeentebestuur aan het object is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende nummering.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1120 : Element<Int32>
	{
		public Element1120(Int32 val)
		{
			this.element = new ElementNummer("1120", "Huisnummer"/*,len: 5*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1130 (Huisletter)
	/// Een alfabetisch teken achter het huisnummer zoals dit door het gemeentebestuur is toegekend dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer in de vorm van een alfabetisch teken.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1130 : Element<String>
	{
		public Element1130(String val)
		{
			this.element = new ElementNummer("1130", "Huisletter"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1140 (Huisnummertoevoeging)
	/// Die letters of tekens die noodzakelijk zijn om, naast huisnummer en -letter, de brievenbus te vinden dan wel een door of namens het bevoegde gemeentelijke orgaan ten aanzien van een adresseerbaar object toegekende toevoeging aan een huisnummer of een combinatie van huisletter en huisnummer.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1140 : Element<String>
	{
		public Element1140(String val)
		{
			this.element = new ElementNummer("1140", "Huisnummertoevoeging"/*,len: 4*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1150 (Aanduiding bij huisnummer)
	/// De aanduiding die wordt gebruikt voor adressen die niet zijn voorzien van de gebruikelijke straatnaam en huisnummeraanduidingen.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1150 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "by", "bij" }, { "to", "tegenover" } };

		public Element1150(String val)
		{
			this.element = new ElementNummer("1150", "Aanduiding bij huisnummer"/*,len: 2*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element1160 (Postcode)
	/// De door de TNT Post vastgestelde code behorend bij de straatnaam en het huisnummer dan wel de door TNT Post vastgestelde code behorende bij een bepaalde combinatie van een naam openbare ruimte en een huisnummer.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1160 : Element<String>
	{
		public Element1160(String val)
		{
			this.element = new ElementNummer("1160", "Postcode"/*,len: 6*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1170 (Woonplaatsnaam)
	/// Een woonplaatsnaam is de naam van een door het bevoegde gemeentelijke orgaan als zodanig aangewezen gedeelte van het gemeentelijk grondgebied.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1170 : Element<String>
	{
		public Element1170(String val)
		{
			this.element = new ElementNummer("1170", "Woonplaatsnaam"/*,len: 80*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1180 (Identificatiecode verblijfplaats)
	/// Een verblijfplaats kan een ligplaats, een standplaats of een verblijfsobject in een of meerdere panden zijn, waaraan respectievelijk een ligplaatsidentificatie, standplaatsidentificatie of verblijfsobjectidentificatie is toegekend.  De Identificatiecode verblijfplaats is een combinatie van een viercijferige gemeentecode, een tweecijferige objecttypecode die aangeeft of de aanduiding een verblijfsobject (01), ligplaats (02) of standplaats (03) betreft en een voor het betreffende objecttype binnen een gemeente uniek tiencijferig volgnummer.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1180 : Element<String>
	{
		public Element1180(String val)
		{
			this.element = new ElementNummer("1180", "Identificatiecode verblijfplaats"/*,len: 16*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1190 (Identificatiecode nummeraanduiding)
	/// De unieke aanduiding van een nummeraanduiding. Een nummeraanduiding is een door het bevoegde gemeentelijke orgaan als zodanig toegekende aanduiding van een adresseerbaar object.  De Identificatiecode nummeraanduiding is een combinatie van een viercijferige gemeentecode, de tweecijferige objecttypecode 20 die aangeeft dat het om een nummeraanduiding gaat en een voor het betreffende objecttype binnen een gemeente uniek tiencijferig volgnummer.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1190 : Element<String>
	{
		public Element1190(String val)
		{
			this.element = new ElementNummer("1190", "Identificatiecode nummeraanduiding"/*,len: 16*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1210 (Locatiebeschrijving)
	/// Een geheel of gedeeltelijke omschrijving van de ligging van een object, indien dit niet kan worden aangegeven in de groep 11 Adres.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1210 : Element<String>
	{
		public Element1210(String val)
		{
			this.element = new ElementNummer("1210", "Locatiebeschrijving"/*,len: 35*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1310 (Land adres buitenland)
	/// Een code, opgenomen in Tabel 34, Landentabel, die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft. In tegenstelling tot bij de gemeente, kan bij de RNI kan de waarde Nederland (6030) wel voorkomen.  Bij het ingaan van een Ministerieel besluit dient hier de standaardwaarde opgenomen te worden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1310 : Element<Int16>
	{
		public Element1310(Int16 val)
		{
			this.element = new ElementNummer("1310", "Land adres buitenland"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel34.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element1320 (Datum aanvang adres buitenland)
	/// De datum van aangifte of ambtshalve melding van verblijf op het buitenlands adres.  Bij emigratie is dit de datum van vertrek naar het buitenland. Bij ambtshalve uitschrijving is dit de datum waarop de betrokkene schriftelijk van het voornemen tot ambtshalve uitschrijving mededeling is gedaan. Bij uitschrijving wegens het ingaan van een Ministerieel besluit is dit de datum van dat besluit. In alle andere gevallen is dit de datum waarop de aangifte is ontvangen.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1320 : Element<Int32>
	{
		public Element1320(Int32 val)
		{
			this.element = new ElementNummer("1320", "Datum aanvang adres buitenland"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element1330 (Regel 1 adres buitenland)
	/// Eerste deel van het adres in het buitenland, met uitzondering van het land.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1330 : Element<String>
	{
		public Element1330(String val)
		{
			this.element = new ElementNummer("1330", "Regel 1 adres buitenland"/*,len: 35*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1340 (Regel 2 adres buitenland)
	/// Tweede deel van het adres in het buitenland, met uitzondering van het land.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1340 : Element<String>
	{
		public Element1340(String val)
		{
			this.element = new ElementNummer("1340", "Regel 2 adres buitenland"/*,len: 35*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1350 (Regel 3 adres buitenland)
	/// Derde deel van het adres in het buitenland, met uitzondering van het land.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1350 : Element<String>
	{
		public Element1350(String val)
		{
			this.element = new ElementNummer("1350", "Regel 3 adres buitenland"/*,len: 35*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1410 (Land vanwaar ingeschreven)
	/// Een code, opgenomen in Tabel 34, Landentabel, die het land aangeeft waar de ingeschrevene verblijf hield voor (her)vestiging in Nederland. Bij het opheffen van een Ministerieel besluit dient hier de standaardwaarde opgenomen te worden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1410 : Element<Int16>
	{
		public Element1410(Int16 val)
		{
			this.element = new ElementNummer("1410", "Land vanwaar ingeschreven"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel34.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element1420 (Datum vestiging in Nederland)
	/// De datum van inschrijving in Nederland.  Bij ambtshalve inschrijving is dit de datum waarop de betrokkene schriftelijk van het voornemen tot ambtshalve inschrijving mededeling is gedaan. In alle andere gevallen is dit de datum waarop de aangifte is ontvangen.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1420 : Element<Int32>
	{
		public Element1420(Int32 val)
		{
			this.element = new ElementNummer("1420", "Datum vestiging in Nederland"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element1510 (Soort verbintenis)
	/// Een aanduiding voor de soort verbintenis die is aangegaan.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1510 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "H", "huwelijk" }, { "P", "geregistreerd partnerschap" } };

		public Element1510(String val)
		{
			this.element = new ElementNummer("1510", "Soort verbintenis"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element1610 (Telefoonnummer)
	/// Het telefoonnummer waarop betrokkene bereikbaar is.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1610 : Element<String>
	{
		public Element1610(String val)
		{
			this.element = new ElementNummer("1610", "Telefoonnummer"/*,len: 15*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1620 (Verificatie-indicatie)
	/// Een aanduiding die aangeeft of is vastgesteld dat het een geldig telefoonnummer is en of is vastgesteld dat de betrokken persoon via dit telefoonnummer kan worden bereikt
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1620 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "NV", "Niet geverifieerd" }, { "BV", "Bestaan geverifieerd" }, { "PV", "Persoon geverifieerd (nummer hoort bij deze persoon" } };

		public Element1620(String val)
		{
			this.element = new ElementNummer("1620", "Verificatie-indicatie"/*,len: 2*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element1630 (Geldig vanaf)
	/// De datum waarop dit telefoonnummer is geregistreerd.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1630 : Element<Int32>
	{
		public Element1630(Int32 val)
		{
			this.element = new ElementNummer("1630", "Geldig vanaf"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element1710 (E-mailadres)
	/// Het e-mailadres waarop betrokkene bereikbaar is.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1710 : Element<String>
	{
		public Element1710(String val)
		{
			this.element = new ElementNummer("1710", "E-mailadres"/*,len: 255*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element1720 (Verificatie-indicatie)
	/// Een aanduiding die aangeeft of is vastgesteld dat het een geldig e-mailadres is en of is vastgesteld dat de betrokken persoon via dit e-mailadres kan worden bereikt
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1720 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "NV", "Niet geverifieerd" }, { "BV", "Bestaan geverifieerd" }, { "PV", "Persoon geverifieerd (e-mailadres hoort bij deze persoon" } };

		public Element1720(String val)
		{
			this.element = new ElementNummer("1720", "Verificatie-indicatie"/*,len: 2*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element1730 (Geldig vanaf)
	/// De datum waarop dit e-mailadres is geregistreerd.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1730 : Element<Int32>
	{
		public Element1730(Int32 val)
		{
			this.element = new ElementNummer("1730", "Geldig vanaf"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element1810 (Einddatum geldigheid)
	/// De datum waarop betrokkene niet meer zijn tijdelijk verblijfsadres op dit adres houdt.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1810 : Element<Int32>
	{
		public Element1810(Int32 val)
		{
			this.element = new ElementNummer("1810", "Einddatum geldigheid"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element1910 (Type adres)
	/// Beschrijving wat de relatie van de betrokken persoon met dit adres
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element1910 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "T", "Tijdelijk verblijfsadres" } };

		public Element1910(String val)
		{
			this.element = new ElementNummer("1910", "Type adres"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element2010 (Vorig A-nummer)
	/// Het administratienummer dat eerder aan de betrokken persoon is toegekend geweest
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element2010 : Element<Int64>
	{
		public Element2010(Int64 val)
		{
			this.element = new ElementNummer("2010", "Vorig A-nummer"/*,len: 10*/);
			this.waarde = new ElementWaarde<Int64> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element2020 (Volgend A-nummer)
	/// Het administratienummer dat nadien aan de betrokken persoon is toegekend
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element2020 : Element<Int64>
	{
		public Element2020(Int64 val)
		{
			this.element = new ElementNummer("2020", "Volgend A-nummer"/*,len: 10*/);
			this.waarde = new ElementWaarde<Int64> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element3110 (Aanduiding Europees kiesrecht)
	/// Een aanduiding die aangeeft of de persoon een oproep moet ontvangen voor verkiezingen voor het Europees parlement.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3110 : Element<Int16>
	{
		private static IDictionary<Int16, string> Domein = new Dictionary<Int16, string>{ { 1, "persoon is uitgesloten" }, { 2, "persoon ontvangt oproep" } };

		public Element3110(Int16 val)
		{
			this.element = new ElementNummer("3110", "Aanduiding Europees kiesrecht"/*,len: 1*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element3120 (Datum verzoek of mededeling Europees kiesrecht)
	/// De datum waarop de persoon een verzoek heeft gedaan met betrekking tot het uitoefenen van zijn kiesrecht voor het Europees parlement of de datum waarop de gemeente een melding heeft ontvangen dat de persoon is uitgesloten van deelname aan verkiezingen voor het Europees parlement.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3120 : Element<Int32>
	{
		public Element3120(Int32 val)
		{
			this.element = new ElementNummer("3120", "Datum verzoek of mededeling Europees kiesrecht"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element3130 (Einddatum uitsluiting Europees kiesrecht)
	/// De datum waarop een uitsluiting voor deelname aan verkiezingen voor het Europees parlement niet meer van toepassing is.  Dit element wordt uitsluitend opgenomen indien er sprake is van een uitsluiting voor bepaalde tijd.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3130 : Element<Int32>
	{
		public Element3130(Int32 val)
		{
			this.element = new ElementNummer("3130", "Einddatum uitsluiting Europees kiesrecht"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element3210 (Indicatie gezag minderjarige)
	/// Een aanduiding die aangeeft wie belast is met het gezag over de minderjarige ingeschrevene.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3210 : Element<String>
	{
		public Element3210(String val)
		{
			this.element = new ElementNummer("3210", "Indicatie gezag minderjarige"/*,len: 2*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element3310 (Indicatie curateleregister)
	/// Een aanduiding dat de ingeschrevene onder curatele is gesteld.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3310 : Element<Int16>
	{
		private static IDictionary<Int16, string> Domein = new Dictionary<Int16, string>{ { 1, "er is een curator aangesteld" } };

		public Element3310(Int16 val)
		{
			this.element = new ElementNummer("3310", "Indicatie curateleregister"/*,len: 1*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element3510 (Soort Nederlands reisdocument)
	/// Een codering, opgenomen in Tabel 48, Tabel Nederlands reisdocument, die aangeeft welk Nederlands reisdocument is verstrekt of in welk reisdocument de ingeschrevene is bijgeschreven.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3510 : Element<String>
	{
		public Element3510(String val)
		{
			this.element = new ElementNummer("3510", "Soort Nederlands reisdocument"/*,len: 2*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Tabel48.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element3520 (Nummer Nederlands reisdocument)
	/// Het nummer van het verstrekte Nederlandse reisdocument of het nummer van het Nederlandse reisdocument waarin de ingeschrevene is bijgeschreven.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3520 : Element<String>
	{
		public Element3520(String val)
		{
			this.element = new ElementNummer("3520", "Nummer Nederlands reisdocument"/*,len: 9*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element3530 (Datum uitgifte Nederlands reisdocument)
	/// De datum waarop het Nederlands reisdocument is uitgegeven of de datum van bijschrijving van de ingeschrevene in een Nederlands reisdocument.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3530 : Element<Int32>
	{
		public Element3530(Int32 val)
		{
			this.element = new ElementNummer("3530", "Datum uitgifte Nederlands reisdocument"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element3540 (Autoriteit van afgifte Nederlands reisdocument)
	/// Een codering, opgenomen in Tabel 49, Tabel Autoriteit van afgifte Nederlands reisdocument, die aangeeft welke autoriteit het Nederlands reisdocument heeft verstrekt of de bijschrijving heeft verricht.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3540 : Element<String>
	{
		public Element3540(String val)
		{
			this.element = new ElementNummer("3540", "Autoriteit van afgifte Nederlands reisdocument"/*,len: 6*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Tabel49.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element3550 (Datum einde geldigheid Nederlands reisdocument)
	/// De datum waarop een Nederlands reisdocument, dat aan de ingeschrevene is verstrekt of waarin de ingeschrevene is bijgeschreven, zijn geldigheid verliest.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3550 : Element<Int32>
	{
		public Element3550(Int32 val)
		{
			this.element = new ElementNummer("3550", "Datum einde geldigheid Nederlands reisdocument"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element3560 (Datum inhouding dan wel vermissing Nederlands reisdocument)
	/// De datum waarop een Nederlands reisdocument is vermist, ingehouden, ingeleverd, dan wel van rechtswege is vervallen.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3560 : Element<Int32>
	{
		public Element3560(Int32 val)
		{
			this.element = new ElementNummer("3560", "Datum inhouding dan wel vermissing Nederlands reisdocument"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element3570 (Aanduiding inhouding dan wel vermissing Nederlands reisdocument)
	/// Een aanduiding dat een Nederlands reisdocument is vermist, ingehouden, ingeleverd, dan wel van rechtswege is vervallen.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3570 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "I", "ingehouden ingeleverd" }, { "R", "van rechtswege vervallen" }, { "V", "vermist" } };

		public Element3570(String val)
		{
			this.element = new ElementNummer("3570", "Aanduiding inhouding dan wel vermissing Nederlands reisdocument"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element3610 (Signalering met betrekking tot het verstrekken van een Nederlands)
	/// Een aanduiding dat aan de ingeschrevene geen reisdocument mag worden verstrekt.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3610 : Element<Int16>
	{
		private static IDictionary<Int16, string> Domein = new Dictionary<Int16, string>{ { 1, "belemmering verstrekking Nederlands reisdocument" } };

		public Element3610(Int16 val)
		{
			this.element = new ElementNummer("3610", "Signalering met betrekking tot het verstrekken van een Nederlands"/*,len: 1*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element3810 (Aanduiding uitgesloten kiesrecht)
	/// Een aanduiding ter uitvoering van de Kieswet.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3810 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "A", "uitgesloten kiesrecht" } };

		public Element3810(String val)
		{
			this.element = new ElementNummer("3810", "Aanduiding uitgesloten kiesrecht"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element3820 (Einddatum uitsluiting kiesrecht)
	/// De datum waarop een uitsluiting kiesrecht niet meer van toepassing is. Dit element wordt uitsluitend opgenomen indien er sprake is van een uitsluiting voor bepaalde tijd. Bij een uitsluiting voor het leven komt het element niet voor.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3820 : Element<Int32>
	{
		public Element3820(Int32 val)
		{
			this.element = new ElementNummer("3820", "Einddatum uitsluiting kiesrecht"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element3910 (Aanduiding verblijfstitel)
	/// Een code, opgenomen in Tabel 56, Verblijfstiteltabel, die aangeeft over welke verblijfsrechtelijke status de ingeschrevene beschikt.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3910 : Element<Int16>
	{
		public Element3910(Int16 val)
		{
			this.element = new ElementNummer("3910", "Aanduiding verblijfstitel"/*,len: 2*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel56.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element3920 (Datum einde verblijfstitel)
	/// De datum waarop de verblijfstitel zijn geldigheid verliest.  Dit element wordt uitsluitend opgenomen indien er sprake is van een verblijfstitel voor bepaalde tijd. Bij een verblijfstitel voor het leven komt het element niet voor.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3920 : Element<Int32>
	{
		public Element3920(Int32 val)
		{
			this.element = new ElementNummer("3920", "Datum einde verblijfstitel"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element3930 (Ingangsdatum verblijfstitel)
	/// De datum waarop de verblijfstitel zijn geldigheid krijgt.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element3930 : Element<Int32>
	{
		public Element3930(Int32 val)
		{
			this.element = new ElementNummer("3930", "Ingangsdatum verblijfstitel"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element4010 (Afnemersindicatie)
	/// Een code, opgenomen in Tabel 35, Autorisatietabel, die het nummer aangeeft dat door RvIG wordt toegekend aan een geautoriseerde afnemer of derde die recht heeft op verstrekking van spontane mutaties.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element4010 : Element<Int32>
	{
		public Element4010(Int32 val)
		{
			this.element = new ElementNummer("4010", "Afnemersindicatie"/*,len: 6*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = Tabel35.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element6110 (Aanduiding naamgebruik)
	/// Een aanduiding voor de wijze van aanschrijving van de ingeschrevene.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element6110 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "E", "eigen geslachtsnaam" }, { "P", "geslachtsnaam echtgenoot/geregistreerd partner" }, { "V", "geslachtsnaam echtgenoot/geregistreerd partner voor eigen geslachtsnaam" }, { "N", "geslachtsnaam echtgenoot/geregistreerd partner na eigen geslachtsnaam" } };

		public Element6110(String val)
		{
			this.element = new ElementNummer("6110", "Aanduiding naamgebruik"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element6210 (Datum ingang familierechtelijke betrekking)
	/// De datum waarop de familierechtelijke betrekking is ontstaan.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element6210 : Element<Int32>
	{
		public Element6210(Int32 val)
		{
			this.element = new ElementNummer("6210", "Datum ingang familierechtelijke betrekking"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element6310 (Reden opname nationaliteit)
	/// Een code, opgenomen in Tabel 37, Tabel Reden opnemen/beëindigen nationaliteit, die aanduidt op grond waarvan de ingeschrevene de Nederlandse nationaliteit verkregen heeft dan wel de reden waarom een niet-Nederlandse nationaliteit is opgenomen, dan wel dat het een persoon is waarop het bijzonder Nederlanderschap van toepassing is.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element6310 : Element<Int16>
	{
		public Element6310(Int16 val)
		{
			this.element = new ElementNummer("6310", "Reden opname nationaliteit"/*,len: 3*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel37.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element6410 (Reden beëindigen nationaliteit)
	/// Een code, opgenomen in Tabel 37, Tabel Reden opnemen/beëindigen nationaliteit, die aanduidt op grond waarvan de ingeschrevene de Nederlandse nationaliteit verloren heeft dan wel de reden waarom een niet-Nederlandse nationaliteit is beëindigd, dan wel dat voor een persoon het bijzonder Nederlanderschap niet langer van toepassing is.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element6410 : Element<Int16>
	{
		public Element6410(Int16 val)
		{
			this.element = new ElementNummer("6410", "Reden beëindigen nationaliteit"/*,len: 3*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel37.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element6510 (Aanduiding bijzonder Nederlanderschap)
	/// Een aanduiding die of aangeeft dat de ingeschrevene behandeld wordt als Nederlander, of dat door de rechter is vastgesteld dat de ingeschrevene niet de Nederlandse nationaliteit bezit.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element6510 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "B", "behandeld als Nederlander" }, { "V", "vastgesteld niet-Nederlander" } };

		public Element6510(String val)
		{
			this.element = new ElementNummer("6510", "Aanduiding bijzonder Nederlanderschap"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element6620 (Datum ingang blokkering PL)
	/// De datum waarop de gemeente de PL naar een andere gemeente of de RNI stuurt.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element6620 : Element<Int32>
	{
		public Element6620(Int32 val)
		{
			this.element = new ElementNummer("6620", "Datum ingang blokkering PL"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element6710 (Datum opschorting bijhouding)
	/// De datum waarop de bijhouding van de PL (gedeeltelijk) is opgeschort.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element6710 : Element<Int32>
	{
		public Element6710(Int32 val)
		{
			this.element = new ElementNummer("6710", "Datum opschorting bijhouding"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element6720 (Omschrijving reden opschorting bijhouding)
	/// Een aanduiding van de reden waarom de bijhouding van de PL geheel of gedeeltelijk is opgeschort.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element6720 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "O", "overlijden" }, { "E", "emigratie" }, { "M", "Ministerieel besluit" }, { "R", "PL aangelegd in de RNI" }, { "F", "fout" } };

		public Element6720(String val)
		{
			this.element = new ElementNummer("6720", "Omschrijving reden opschorting bijhouding"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element6810 (Datum eerste inschrijving BRP)
	/// Dit is de datum vanaf wanneer de persoon is ingeschreven in de BRP.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element6810 : Element<Int32>
	{
		public Element6810(Int32 val)
		{
			this.element = new ElementNummer("6810", "Datum eerste inschrijving BRP"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element6910 (Gemeente waar de PK zich bevindt)
	/// Een code, opgenomen in Tabel 33, Gemeententabel, die aangeeft in welke gemeente de PK zich bevindt.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element6910 : Element<Int16>
	{
		public Element6910(Int16 val)
		{
			this.element = new ElementNummer("6910", "Gemeente waar de PK zich bevindt"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel33.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element7010 (Indicatie geheim)
	/// Een aanduiding die aangeeft dat gegevens wel of niet verstrekt mogen worden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element7010 : Element<Int16>
	{
		private static IDictionary<Int16, string> Domein = new Dictionary<Int16, string>{ { 0, "geen beperking" }, { 1, "niet zonder toestemming aan derden ter uitvoering van een algemeen verbindend voorschrift" }, { 2, "niet aan kerken" }, { 3, "niet aan vrije derden" }, { 4, "niet zonder toestemming aan derden ter uitvoering van een algemeen verbindend voorschrift en niet aan kerken" }, { 5, "niet zonder toestemming aan derden ter uitvoering van een algemeen verbindend voorschrift en niet aan vrije derden" }, { 6, "niet aan kerken en niet aan vrije derden" }, { 7, "niet zonder toestemming aan derden ter uitvoering van een algemeen verbindend voorschrift en niet aan vrije derden en niet aan kerken" } };

		public Element7010(Int16 val)
		{
			this.element = new ElementNummer("7010", "Indicatie geheim"/*,len: 1*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element7110 (Datum verificatie)
	/// De datum waarop de verificatie van gegevens op de PL in de RNI heeft plaatsgevonden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element7110 : Element<Int32>
	{
		public Element7110(Int32 val)
		{
			this.element = new ElementNummer("7110", "Datum verificatie"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element7120 (Omschrijving verificatie)
	/// De omschrijving op welke wijze de verificatie van gegevens op de PL in de RNI heeft plaatsgevonden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element7120 : Element<String>
	{
		public Element7120(String val)
		{
			this.element = new ElementNummer("7120", "Omschrijving verificatie"/*,len: 50*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element7210 (Omschrijving van de aangifte adreshouding)
	/// Een aanduiding van de persoon door wie de aangifte van verblijf en adres is gedaan.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element7210 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "A", "ambtshalve" }, { "B", "Ministerieel besluit" }, { "G", "gezaghouder" }, { "H", "hoofd instelling" }, { "I", "ingeschrevene" }, { "K", "meerderjarig inwonend kind voor ouder" }, { "M", "meerderjarige gemachtigde" }, { "O", "inwonende ouder voor meerderjarig kind" }, { "P", "echtgenoot/geregistreerd partner" }, { "T", "technische wijziging ivm BAG" }, { "W", "infrastructurele wijziging" } };

		public Element7210(String val)
		{
			this.element = new ElementNummer("7210", "Omschrijving van de aangifte adreshouding"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element7310 (EU-persoonsnummer)
	/// Het persoonsnummer dat door een EU-land is afgegeven aan een onderdaan en dat van het overgelegde reisdocument is afgeleid.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element7310 : Element<String>
	{
		public Element7310(String val)
		{
			this.element = new ElementNummer("7310", "EU-persoonsnummer"/*,len: 40*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element7510 (Indicatie document)
	/// Een aanduiding dat gedurende de opschorting van de bijhouding van de PL documenten zijn binnengekomen, die na de beëindiging van de opschorting verwerkt moeten worden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element7510 : Element<Int16>
	{
		private static IDictionary<Int16, string> Domein = new Dictionary<Int16, string>{ { 1, "één of meer documenten" } };

		public Element7510(Int16 val)
		{
			this.element = new ElementNummer("7510", "Indicatie document"/*,len: 1*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element8010 (Versienummer)
	/// Een nummer waarmee de versie van de PL aangegeven wordt.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8010 : Element<Int16>
	{
		public Element8010(Int16 val)
		{
			this.element = new ElementNummer("8010", "Versienummer"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element8020 (Datumtijdstempel)
	/// Dit is de datum en tijd waarop de laatste wijziging of de eerste inschrijving van de PL heeft plaatsgevonden. De op te nemen tijd is Greenwich Mean Time (GMT).
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8020 : Element<Int64>
	{
		public Element8020(Int64 val)
		{
			this.element = new ElementNummer("8020", "Datumtijdstempel"/*,len: 17*/);
			this.waarde = new ElementWaarde<Int64> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element8110 (Registergemeente akte)
	/// Een code, opgenomen in Tabel 33, Gemeententabel, die aangeeft in welke gemeente de akte in de registers van de burgerlijke stand in Nederland is opgenomen.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8110 : Element<Int16>
	{
		public Element8110(Int16 val)
		{
			this.element = new ElementNummer("8110", "Registergemeente akte"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel33.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element8120 (Aktenummer)
	/// Een aanduiding van de akte die is opgenomen in de registers van de burgerlijke stand in Nederland.  De eerste drie posities van het aktenummer dienen conform Tabel 39, Tabel Akteaanduiding te zijn. De laatste 4 posities bevatten een volgnummer van de akte.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8120 : Element<String>
	{
		public Element8120(String val)
		{
			this.element = new ElementNummer("8120", "Aktenummer"/*,len: 7*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Tabel39.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element8210 (Gemeente document)
	/// Een code, opgenomen in Tabel 33, Gemeententabel, die aangeeft in welke gemeente de ontlening aan of de afleiding uit het document heeft plaatsgevonden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8210 : Element<Int16>
	{
		public Element8210(Int16 val)
		{
			this.element = new ElementNummer("8210", "Gemeente document"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel33.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element8220 (Datum document)
	/// De datum waarop de ontlening aan of de afleiding uit het document heeft plaatsgevonden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8220 : Element<Int32>
	{
		public Element8220(Int32 val)
		{
			this.element = new ElementNummer("8220", "Datum document"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element8230 (Beschrijving document)
	/// Beschrijving van het document waaraan de gegevens zijn ontleend of waaruit de gegevens zijn afgeleid.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8230 : Element<String>
	{
		public Element8230(String val)
		{
			this.element = new ElementNummer("8230", "Beschrijving document"/*,len: 40*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element8310 (Aanduiding gegevens in onderzoek)
	/// Een aanduiding dat in een categorie één of meer gegevens met betrekking tot de onjuistheid of de strijdigheid met de openbare orde zijn of worden onderzocht. In categorie 08 Verblijfplaats kan de aanduiding tevens aangeven dat er is vastgesteld dat betrokkene niet op het geregistreerde adres woont.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8310 : Element<Int32>
	{
		public Element8310(Int32 val)
		{
			this.element = new ElementNummer("8310", "Aanduiding gegevens in onderzoek"/*,len: 6*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element8320 (Datum ingang onderzoek)
	/// De datum waarop een onderzoek inzake de onjuistheid of de strijdigheid met de openbare orde is gestart.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8320 : Element<Int32>
	{
		public Element8320(Int32 val)
		{
			this.element = new ElementNummer("8320", "Datum ingang onderzoek"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element8330 (Datum einde onderzoek)
	/// De datum waarop een onderzoek inzake de onjuistheid of de strijdigheid met de openbare orde is beëindigd.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8330 : Element<Int32>
	{
		public Element8330(Int32 val)
		{
			this.element = new ElementNummer("8330", "Datum einde onderzoek"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element8410 (Indicatie onjuist, dan wel strijdigheid met de openbare orde)
	/// Een aanduiding dat één of meer gegevens onjuist of strijdig zijn met de openbare orde.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8410 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "O", "onjuist" }, { "S", "strijdig met de openbare orde" } };

		public Element8410(String val)
		{
			this.element = new ElementNummer("8410", "Indicatie onjuist, dan wel strijdigheid met de openbare orde"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element8510 (Ingangsdatum geldigheid)
	/// De datum waarop het geheel van gegevens geldig is geworden.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8510 : Element<Int32>
	{
		public Element8510(Int32 val)
		{
			this.element = new ElementNummer("8510", "Ingangsdatum geldigheid"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element8610 (Datum van opneming)
	/// De datum waarop het geheel van gegevens daadwerkelijk in de BRP is opgenomen.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8610 : Element<Int32>
	{
		public Element8610(Int32 val)
		{
			this.element = new ElementNummer("8610", "Datum van opneming"/*,len: 8*/);
			this.waarde = new ElementWaarde<Int32> { Waarde = val , Omschrijving = DatumFormatter.Format(val/*, "dd-mm-jjjj"*/) };
		}
	}

	/// <summary>
	/// Representeert Element8710 (PK-gegevens volledig meegeconverteerd)
	/// Een aanduiding dat gegevens over alle kinderen van de PK zijn opgenomen in de BRP.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8710 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "P", "PK-gegevens volledig meegeconverteerd" } };

		public Element8710(String val)
		{
			this.element = new ElementNummer("8710", "PK-gegevens volledig meegeconverteerd"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}

	/// <summary>
	/// Representeert Element8810 (RNI-deelnemer)
	/// Een code, voorkomend in Tabel 60, RNI-deelnemerstabel, die aangeeft welke RNI-deelnemer (een deel van) de gegevens in de betrokken categorie heeft aangeleverd.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8810 : Element<Int16>
	{
		public Element8810(Int16 val)
		{
			this.element = new ElementNummer("8810", "RNI-deelnemer"/*,len: 4*/);
			this.waarde = new ElementWaarde<Int16> { Waarde = val , Omschrijving = Tabel60.Instance.Omschrijving(val) };
		}
	}

	/// <summary>
	/// Representeert Element8820 (Omschrijving verdrag)
	/// Een aanduiding van het verdrag op basis waarvan (een deel van) de gegevens in de betrokken categorie door een buitenlandse zusterorganisatie van een RNI-deelnemer aan die deelnemer zijn aangeleverd.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8820 : Element<String>
	{
		public Element8820(String val)
		{
			this.element = new ElementNummer("8820", "Omschrijving verdrag"/*,len: 50*/);
			this.waarde = new ElementWaarde<String> { Waarde = val  };
		}
	}

	/// <summary>
	/// Representeert Element8910 (Registratie betrekking)
	/// De indicatie dat een kind levenloos is geboren.
	/// </summary>
	[ExcludeFromCodeCoverage]
	public partial class Element8910 : Element<String>
	{
		private static IDictionary<String, string> Domein = new Dictionary<String, string>{ { "L", "levenloos geboren kind" } };

		public Element8910(String val)
		{
			this.element = new ElementNummer("8910", "Registratie betrekking"/*,len: 1*/);
			this.waarde = new ElementWaarde<String> { Waarde = val , Omschrijving = Domein[val] };
		}
	}
}
