//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template: Logisch Ontwerp BRP 4.2.0 1 januari 2023
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using Centric.PIV.Burgerzaken.RaadplegenPL.ResourceLayer.Brp.DataModel.Transferables;
using Centric.PIV.Burgerzaken.RaadplegenPL.ResourceLayer.Brp.Interfaces;

namespace Centric.PIV.Burgerzaken.RaadplegenPL.ResourceLayer.Brp.DomainModel.LogischOntwerp
{
	/// <summary>
	/// Representeert Categorie01 (Persoon)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie01 : Categorie01Base, IHistorie
	{
		public IList<Categorie51> Historie { get; set; }

		/// <summary>
		/// Constructor Categorie01 
		/// </summary>
		public Categorie01(long rsysPrs)
		{
			var xPrs = new GBA_XTPRSGEG(processor.Process(processor.repo.GetGBA_TPRSGEG(rsysPrs)).Single());
			var xNam = new GBA_XTNAMREG(processor.Process(processor.repo.GetGBA_TNAMREG(xPrs.RsysNam)).Single());
			var groepen = new List<Groep>().Concat(xPrs.Groepen).Concat(xNam.Groepen);

			groep01 = (Groep01)groepen.SingleOrDefault(g => g is Groep01);
			groep02 = (Groep02)groepen.SingleOrDefault(g => g is Groep02);
			groep03 = (Groep03)groepen.SingleOrDefault(g => g is Groep03);
			groep04 = (Groep04)groepen.SingleOrDefault(g => g is Groep04);
			groep20 = (Groep20)groepen.SingleOrDefault(g => g is Groep20);
			groep61 = (Groep61)groepen.SingleOrDefault(g => g is Groep61);
			groep81 = (Groep81)groepen.SingleOrDefault(g => g is Groep81);
			groep82 = (Groep82)groepen.SingleOrDefault(g => g is Groep82);
			groep83 = (Groep83)groepen.SingleOrDefault(g => g is Groep83);
			groep85 = (Groep85)groepen.SingleOrDefault(g => g is Groep85);
			groep86 = (Groep86)groepen.SingleOrDefault(g => g is Groep86);
			groep88 = (Groep88)groepen.SingleOrDefault(g => g is Groep88);
		}
	}

	/// <summary>
	/// Representeert Categorie02 (Ouder1)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie02 : Categorie02Base, IHistorie
	{
		public IList<Categorie52> Historie { get; set; }

		/// <summary>
		/// Constructor Categorie02 
		/// </summary>
		public Categorie02(long rsysPrs)
		{
			var xOu1 = new GBA_XTOU1AKT(processor.Process(processor.repo.GetGBA_TOU1AKT(rsysPrs)).Single());
			var xNam = new GBA_XTNAMREG(processor.Process(processor.repo.GetGBA_TNAMREG(rsysPrs)).Single());
			var groepen = new List<Groep>().Concat(xOu1.Groepen).Concat(xNam.Groepen);

			groep01 = (Groep01)groepen.SingleOrDefault(g => g is Groep01);
			groep02 = (Groep02)groepen.SingleOrDefault(g => g is Groep02);
			groep03 = (Groep03)groepen.SingleOrDefault(g => g is Groep03);
			groep04 = (Groep04)groepen.SingleOrDefault(g => g is Groep04);
			groep62 = (Groep62)groepen.SingleOrDefault(g => g is Groep62);
			groep81 = (Groep81)groepen.SingleOrDefault(g => g is Groep81);
			groep82 = (Groep82)groepen.SingleOrDefault(g => g is Groep82);
			groep83 = (Groep83)groepen.SingleOrDefault(g => g is Groep83);
			groep85 = (Groep85)groepen.SingleOrDefault(g => g is Groep85);
			groep86 = (Groep86)groepen.SingleOrDefault(g => g is Groep86);
		}
	}

	/// <summary>
	/// Representeert Categorie03 (Ouder2)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie03 : Categorie03Base, IHistorie
	{
		public IList<Categorie53> Historie { get; set; }

		/// <summary>
		/// Constructor Categorie03 
		/// </summary>
		public Categorie03(long rsysPrs)
		{
			var xOu2 = new GBA_XTOU2AKT(processor.Process(processor.repo.GetGBA_TOU2AKT(rsysPrs)).Single());
			var xNam = new GBA_XTNAMREG(processor.Process(processor.repo.GetGBA_TNAMREG(rsysPrs)).Single());
			var groepen = new List<Groep>().Concat(xOu2.Groepen).Concat(xNam.Groepen);

			groep01 = (Groep01)groepen.SingleOrDefault(g => g is Groep01);
			groep02 = (Groep02)groepen.SingleOrDefault(g => g is Groep02);
			groep03 = (Groep03)groepen.SingleOrDefault(g => g is Groep03);
			groep04 = (Groep04)groepen.SingleOrDefault(g => g is Groep04);
			groep62 = (Groep62)groepen.SingleOrDefault(g => g is Groep62);
			groep81 = (Groep81)groepen.SingleOrDefault(g => g is Groep81);
			groep82 = (Groep82)groepen.SingleOrDefault(g => g is Groep82);
			groep83 = (Groep83)groepen.SingleOrDefault(g => g is Groep83);
			groep85 = (Groep85)groepen.SingleOrDefault(g => g is Groep85);
			groep86 = (Groep86)groepen.SingleOrDefault(g => g is Groep86);
		}
	}

	/// <summary>
	/// Representeert Categorie04 (Nationaliteit)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie04 : Categorie04Base, IHistorie
	{
		public IList<Categorie54> Historie { get; set; }

		/// <summary>
		/// Constructor Categorie04 
		/// </summary>
		public Categorie04(params ITransferable[] transferables)
		{
			/*transferables are provided IN ORDER by class Categorieën04!*/
			var groepen = new List<Groep>();
			for (int i=0; i<transferables.Length; i++)
			{
				groepen = (List<Groep>)groepen.Concat(transferables[i].Groepen);
			}

			groep05 = (Groep05)groepen.SingleOrDefault(g => g is Groep05);
			groep63 = (Groep63)groepen.SingleOrDefault(g => g is Groep63);
			groep64 = (Groep64)groepen.SingleOrDefault(g => g is Groep64);
			groep65 = (Groep65)groepen.SingleOrDefault(g => g is Groep65);
			groep73 = (Groep73)groepen.SingleOrDefault(g => g is Groep73);
			groep82 = (Groep82)groepen.SingleOrDefault(g => g is Groep82);
			groep83 = (Groep83)groepen.SingleOrDefault(g => g is Groep83);
			groep85 = (Groep85)groepen.SingleOrDefault(g => g is Groep85);
			groep86 = (Groep86)groepen.SingleOrDefault(g => g is Groep86);
			groep88 = (Groep88)groepen.SingleOrDefault(g => g is Groep88);
		}
	}

	/// <summary>
	/// Representeert Categorie05 (Huwelijk/geregistreerd)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie05 : Categorie05Base, IHistorie
	{
		public IList<Categorie55> Historie { get; set; }

	}

	/// <summary>
	/// Representeert Categorie06 (Overlijden)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie06 : Categorie06Base, IHistorie
	{
		public IList<Categorie56> Historie { get; set; }

		/// <summary>
		/// Constructor Categorie06 
		/// </summary>
		public Categorie06(long rsysPrs)
		{
			var xOvlAkt = new GBA_XTOVLAKT(processor.Process(processor.repo.GetGBA_TOVLAKT(rsysPrs)).Single());
			var groepen = new List<Groep>().Concat(xOvlAkt.Groepen);

			groep08 = (Groep08)groepen.SingleOrDefault(g => g is Groep08);
			groep81 = (Groep81)groepen.SingleOrDefault(g => g is Groep81);
			groep82 = (Groep82)groepen.SingleOrDefault(g => g is Groep82);
			groep83 = (Groep83)groepen.SingleOrDefault(g => g is Groep83);
			groep85 = (Groep85)groepen.SingleOrDefault(g => g is Groep85);
			groep86 = (Groep86)groepen.SingleOrDefault(g => g is Groep86);
			groep88 = (Groep88)groepen.SingleOrDefault(g => g is Groep88);
		}
	}

	/// <summary>
	/// Representeert Categorie08 (Verblijfplaats)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie08 : Categorie08Base, IHistorie
	{
		public IList<Categorie58> Historie { get; set; }

	}

	/// <summary>
	/// Representeert Categorie09 (Kind)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie09 : Categorie09Base, IHistorie
	{
		public IList<Categorie59> Historie { get; set; }

	}

	/// <summary>
	/// Representeert Categorie10 (Verblijfstitel)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie10 : Categorie10Base, IHistorie
	{
		public IList<Categorie60> Historie { get; set; }

	}

	/// <summary>
	/// Representeert Categorie11 (Gezagsverhouding)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie11 : Categorie11Base, IHistorie
	{
		public IList<Categorie61> Historie { get; set; }

	}

	/// <summary>
	/// Representeert Categorie14 (Afnemersindicatie)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie14 : Categorie14Base, IHistorie
	{
		public IList<Categorie64> Historie { get; set; }

	}

	/// <summary>
	/// Representeert Categorie16 (Tijdelijk)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie16 : Categorie16Base, IHistorie
	{
		public IList<Categorie66> Historie { get; set; }

	}

	/// <summary>
	/// Representeert Categorie21 (Verwijzing)
	/// </summary>
	[ExcludeFromCodeCoverage]
	public class Categorie21 : Categorie21Base, IHistorie
	{
		public IList<Categorie71> Historie { get; set; }

	}

}
